name: Pull request workflow

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  packages: read

jobs:

  check_pre-commit:
    name: Run pre-commit checks
    runs-on: ubicloud-standard-16

    container:
      image: ghcr.io/bonsol-collective/bonsol-forge:0.1.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}

      - name: Mark repo as safe for git
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Run pre-commit in check mode
        run: pre-commit run --all-files

      - name: Show error log
        if: failure()
        run: |
          echo "=== ERROR LOG CONTENTS ==="
          cat /github/home/.cache/pre-commit/pre-commit.log

  check-formatting:
    name: Check & Format
    runs-on: ubicloud-standard-16

    container:
      image: ghcr.io/bonsol-collective/bonsol-forge:0.1.0

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check
        run: cargo check

      - name: Fmt
        run: cargo fmt --all -- --check

  unit-tests:
    name: Unit Test
    runs-on: ubicloud-standard-16

    container:
      image: ghcr.io/bonsol-collective/bonsol-forge:0.1.0

    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Test
        run: cargo test -- --nocapture

# Disable E2E tests for now

#  check-fork-pr:
#    name: Check if PR is from fork
#    runs-on: ubuntu-latest
#    outputs:
#      is_fork: ${{ steps.check.outputs.is_fork }}
#    steps:
#      - name: Check if PR is from fork
#        id: check
#        run: |
#          if [[ "${{ github.event.pull_request.head.repo.fork }}" == "true" ]]; then
#            echo "is_fork=true" >> $GITHUB_OUTPUT
#            echo "PR is from a fork repository"
#          else
#            echo "is_fork=false" >> $GITHUB_OUTPUT
#            echo "PR is from the same repository"
#          fi

#   e2e-test:
#
#     name: E2E Test
#     runs-on:
#       labels: ubicloud-standard-30
#     needs: [call-build-node-container-image, check-fork-pr]
#
#     container:
#       image: ${{ needs.check-fork-pr.outputs.is_fork == 'true' && 'bonsol-node-stark-cuda:latest' || format('ghcr.io/bonsol-collective/bonsol-node:stark-cuda-{0}', github.sha) }}
#       options: "-it"
#       volumes:
#         - local:/workspaces/bonsol
#
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#
#       - name: E2E Test
#         shell: bash
#         run: |
#           set -euxo pipefail
#           cd /usr/opt/bonsol/
#           echo "Using image ${{ needs.check-fork-pr.outputs.is_fork == 'true' && 'bonsol-node-stark-cuda:latest' || format('ghcr.io/bonsol-collective/bonsol-node:stark-cuda-{0}', github.sha) }}"
#           git clone https://github.com/bonsol-collective/bonsol.git src
#           cp -pr src/elf .
#           solana-keygen new -s --no-bip39-passphrase -f
#           solana-test-validator \
#             --ledger ./ledger \
#             -q \
#             --limit-ledger-size 0 \
#             --bind-address 0.0.0.0 \
#             --rpc-pubsub-enable-block-subscription \
#             --bpf-program BoNsHRcyLLNdtnoDf8hiCNZpyehMC4FDMxs6NTxFi3ew /usr/opt/bonsol/bonsol.so \
#             --bpf-program exay1T7QqsJPNcwzMiWubR6vZnqrgM16jZRraHgqBGG /usr/opt/bonsol/callback_example.so \
#             -r 1>/dev/null 2>/dev/null &
#           sleep 15
#           solana-keygen new -s --no-bip39-passphrase --outfile node_keypair.json -f
#           solana -u http://localhost:8899 airdrop 1 --keypair node_keypair.json
#           solana -u http://localhost:8899 airdrop 1
#           ulimit -s unlimited
#           echo "Starting node"
#           /usr/opt/bonsol/bonsol-node-cpu -f ./src/Node.toml 1>&1 &
#           sleep 15
#           echo "Deploying"
#           /usr/opt/bonsol/bonsol \
#             --keypair ~/.config/solana/id.json \
#             --rpc-url http://127.0.0.1:8899 \
#             deploy \
#             url \
#             -m src/cli/src/tests/test_data/test_manifest.json \
#             --url https://bonsol-public-images.s3.amazonaws.com/simple-68f4b0c5f9ce034aa60ceb264a18d6c410a3af68fafd931bcfd9ebe7c1e42960 \
#             -y
#           echo "Running Tests"
#           /usr/opt/bonsol/bonsol-tester 500
