name: Build Bonsol node images

on:
  workflow_call:
    inputs:
      is_fork:
        required: false
        type: boolean
        default: false

jobs:
  build-node-container-image:
    runs-on: ubicloud-standard-16

    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: ${{ !inputs.is_fork }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set different tags based on whether this is a tag push or main branch push
      # Tags:
      # - PR     - commit number
      # - Release - version number

      - name: Set Docker Tags
        id: docker_tags
        run: |
          echo "REGISTRY=ghcr.io/bonsol-collective/bonsol-node" >> $GITHUB_OUTPUT
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # For tag releases, use flavor-v{version}
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            # For main branch pushes, use flavor-{commit_sha}
            echo "TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi
          # Set local image names for fork PRs
          echo "SLIM_LOCAL_NAME=bonsol-node:slim-${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "STARK_LOCAL_NAME=bonsol-node:stark-${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "STARK_CUDA_LOCAL_NAME=bonsol-node:stark-cuda-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build Docker Image slim
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ !inputs.is_fork }}
          load: ${{ inputs.is_fork }}
          file: docker/Dockerfile.slim
          tags: ${{ inputs.is_fork && steps.docker_tags.outputs.SLIM_LOCAL_NAME || format('{0}:slim-{1}', steps.docker_tags.outputs.REGISTRY, steps.docker_tags.outputs.TAG) }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker Image stark
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ !inputs.is_fork }}
          load: ${{ inputs.is_fork }}
          file: docker/Dockerfile.stark
          tags: ${{ inputs.is_fork && steps.docker_tags.outputs.STARK_LOCAL_NAME || format('{0}:stark-{1}', steps.docker_tags.outputs.REGISTRY, steps.docker_tags.outputs.TAG) }}
          platforms: linux/amd64
          build-args: |
            IMAGE=${{ inputs.is_fork && steps.docker_tags.outputs.SLIM_LOCAL_NAME || format('{0}:slim-{1}', steps.docker_tags.outputs.REGISTRY, steps.docker_tags.outputs.TAG) }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker Image full
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ !inputs.is_fork }}
          load: ${{ inputs.is_fork }}
          file: docker/Dockerfile.full
          tags: ${{ inputs.is_fork && steps.docker_tags.outputs.STARK_CUDA_LOCAL_NAME || format('{0}:stark-cuda-{1}', steps.docker_tags.outputs.REGISTRY, steps.docker_tags.outputs.TAG) }}
          platforms: linux/amd64
          build-args: |
            IMAGE=${{ inputs.is_fork && steps.docker_tags.outputs.STARK_LOCAL_NAME || format('{0}:stark-{1}', steps.docker_tags.outputs.REGISTRY, steps.docker_tags.outputs.TAG) }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
